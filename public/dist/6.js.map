{"version":3,"sources":["webpack:///./src/services/Notes/configs/api.js","webpack:///./src/services/Notes/contexts/NotesContext/actions.js","webpack:///./src/services/Notes/contexts/NotesContext/index.js","webpack:///./src/services/Notes/contexts/NotesContext/reducer.js","webpack:///./src/services/Notes/index.js","webpack:///./src/services/Notes/root.component.js"],"names":["API_URL","FETCH_NOTES_BEGIN","FETCH_NOTES_SUCCESS","FETCH_NOTES_ERROR","POST_NOTES_BEGIN","POST_NOTES_SUCCESS","POST_NOTES_ERROR","NotesStateContext","React","createContext","NotesDispatchContext","NotesProvider","children","useReducer","reducer","initialState","state","dispatch","useNotesState","context","useContext","undefined","Error","useNotesDispatch","fetchNotes","type","URL","fetch","response","json","payload","result","postNotes","data","method","body","JSON","stringify","headers","loading","error","errorMsg","items","action","console","log","newNotes","domElementGetter","document","getElementById","reactLifecycles","singleSPAReact","ReactDOM","rootComponent","Notes","bootstrap","mount","unmount","ListPage","lazy","CreatePage","NotesWithContext"],"mappings":"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","file":"6.js","sourcesContent":["export const API_URL = 'http://localhost:4009/single-spa-notes/v1'\n","export const FETCH_NOTES_BEGIN = 'FETCH_NOTES_BEGIN'\nexport const FETCH_NOTES_SUCCESS = 'FETCH_NOTES_SUCCESS'\nexport const FETCH_NOTES_ERROR = 'FETCH_NOTES_ERROR'\n\nexport const POST_NOTES_BEGIN = 'POST_NOTES_BEGIN'\nexport const POST_NOTES_SUCCESS = 'POST_NOTES_SUCCESS'\nexport const POST_NOTES_ERROR = 'POST_NOTES_ERROR'\n","import React from 'react'\nimport 'regenerator-runtime'\nimport { API_URL } from '../../configs/api'\nimport {\n  FETCH_NOTES_BEGIN,\n  FETCH_NOTES_SUCCESS,\n  FETCH_NOTES_ERROR,\n  POST_NOTES_BEGIN,\n  POST_NOTES_SUCCESS,\n  POST_NOTES_ERROR,\n} from './actions'\nimport { initialState, reducer } from './reducer'\n\nconst NotesStateContext = React.createContext()\nconst NotesDispatchContext = React.createContext()\n\nexport function NotesProvider({ children }) {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n\n  return (\n    <NotesStateContext.Provider value={state}>\n      <NotesDispatchContext.Provider value={dispatch}>\n        {children}\n      </NotesDispatchContext.Provider>\n    </NotesStateContext.Provider>\n  )\n}\n\nexport function useNotesState() {\n  const context = React.useContext(NotesStateContext)\n  if (context === undefined) {\n    throw new Error('useNotesState must be used inside NotesProvider')\n  }\n\n  return context\n}\n\nexport function useNotesDispatch() {\n  const context = React.useContext(NotesDispatchContext)\n  if (context === undefined) {\n    throw new Error('useNotesDispatch must be used inside NotesProvider')\n  }\n\n  return context\n}\n\n/** \n * @desc Fetching notes from api\n */\nexport async function fetchNotes(dispatch) {\n  dispatch({ type: FETCH_NOTES_BEGIN })\n  try {\n    const URL = `${API_URL}/notes`\n    const response = await fetch(URL)\n    if (response) {\n      const json = await response.json()\n      const payload = json.result\n      dispatch({ type: FETCH_NOTES_SUCCESS, payload })\n    } else {\n      const payload = 'Failed to get response'\n      dispatch({ type: FETCH_NOTES_ERROR, payload })\n      throw new Error('Failed to get response')\n    }\n  } catch (error) {\n    const payload = 'Something went wrong'\n    dispatch({ type: FETCH_NOTES_ERROR, payload })\n    throw error\n  }\n}\n\n/** \n * @desc Post note to api\n */\nexport async function postNotes(dispatch, data) {\n  dispatch({ type: POST_NOTES_BEGIN })\n  try {\n    const URL = `${API_URL}/notes`\n    const response = await fetch(URL, {\n      method: 'POST',\n      body: JSON.stringify({ ...data }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n    if (response) {\n      dispatch({ type: POST_NOTES_SUCCESS, payload: { ...data } })\n    } else {\n      const payload = 'Failed to post'\n      dispatch({ type: POST_NOTES_ERROR, payload })\n      throw new Error('Failed to post')\n    }\n  } catch (error) {\n    const payload = 'Something went wrong'\n    dispatch({ type: POST_NOTES_ERROR, payload })\n    throw error\n  }\n}\n","import {\n  FETCH_NOTES_BEGIN,\n  FETCH_NOTES_SUCCESS,\n  FETCH_NOTES_ERROR,\n  POST_NOTES_BEGIN,\n  POST_NOTES_SUCCESS,\n  POST_NOTES_ERROR,\n} from './actions'\n\nexport const initialState = {\n  loading: false,\n  error: false,\n  errorMsg: '',\n  items: null,\n}\n\nexport function reducer (state, action) {\n  switch(action.type) {\n    case FETCH_NOTES_BEGIN:\n      return { ...state, ...initialState, loading: true }\n    case FETCH_NOTES_SUCCESS:\n      return { ...state, ...initialState, items: action.payload }\n    case FETCH_NOTES_ERROR:\n      return { ...state, ...initialState, errorMsg: action.payload }\n    case POST_NOTES_BEGIN:\n      return { ...state, loading: true, error: false, errorMsg: '' }\n    case POST_NOTES_SUCCESS:\n      console.log({ ...state })\n      const newNotes = [...state.items, action.payload]\n      return { ...state, loading: false, error: false, errorMsg: '', items: [...newNotes] }\n    case POST_NOTES_ERROR:\n      return { ...state, loading: false, error: true, errorMsg: action.payload }\n    default:\n      throw new Error(`Unhandled action type: ${action.type}`)\n  }\n}\n","import React from \"react\"\nimport ReactDOM from 'react-dom'\nimport singleSPAReact from 'single-spa-react'\nimport Notes from './root.component.js'\n\nfunction domElementGetter() {\n  return document.getElementById('Notes')\n}\n\nconst reactLifecycles = singleSPAReact({\n  React,\n  ReactDOM,\n  rootComponent: Notes,\n  domElementGetter\n})\n\nexport const bootstrap = [\n  reactLifecycles.bootstrap,\n]\n\nexport const mount = [\n  reactLifecycles.mount,\n]\n\nexport const unmount = [\n  reactLifecycles.unmount,\n]\n","import React, { Suspense } from 'react'\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n} from 'react-router-dom'\n\nconst ListPage = React.lazy(() => import('./pages/List'))\nconst CreatePage = React.lazy(() => import('./pages/Create'))\n\nimport { NotesProvider } from './contexts/NotesContext'\n\nfunction NotesWithContext() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <NotesProvider>\n          <Route path=\"/notes\" exact>\n            <Suspense fallback={<p>sdfsd</p>}>\n              <ListPage />\n            </Suspense>\n          </Route>\n          <Route path=\"/notes/create\" exact>\n            <Suspense fallback={<p>sdfsd</p>}>\n              <CreatePage />\n            </Suspense>\n          </Route>\n        </NotesProvider>\n      </Switch>\n    </BrowserRouter>\n  )\n}\n\nexport default NotesWithContext\n"],"sourceRoot":""}